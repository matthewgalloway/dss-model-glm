/* This file is the descriptor for the Custom Python Prediction algorithm dev-glm_glm */
{
    "meta" : {
        "label": "Generalized Linear Model",
        "description": "Generalized Linear Model",
        "icon": "icon-wrench"
    },
    // Possibles values are: ["BINARY_CLASSIFICATION", "MULTICLASS", "REGRESSION"]
    "predictionTypes": ["REGRESSION"],
    "gridSearchMode": "MANAGED",
    "supportsSampleWeights": true,
    "acceptsSparseMatrix": false,

    /* params:
    Available parameter types include:
    STRING, INT, DOUBLE, BOOLEAN, DATE, SELECT, TEXTAREA, PRESET and others.

    Besides, if the parameters are to be used to build the grid search, you must add a `gridParam` field and set it to true.
    */
    "paramsPythonSetup": "front_end_filters.py",
    "params": [
        {
            "name": "family",
            "label": "Distribution",
            "description": "The distribution for the link function",
            "type": "SELECT",
            "defaultValue": ["binomial"],
            "selectChoices": [
                {
                    "value":"binomial",
                    "label":"Binomial"
                },
                {
                    "value":"gamma",
                    "label":"Gamma"
                },
                {
                    "value":"gaussian",
                    "label": "Gaussian"
                },
                {
                    "value":"inverse_gaussian",
                    "label": "Inverse Gaussian"
                },
                {
                    "value":"poisson",
                    "label": "Poisson"
                },
                {
                    "value":"negative_binomial",
                    "label": "Negative Binomial"
                },
                {
                    "value":"tweedie",
                    "label": "Tweedie"
                }
            ],
            "allowDuplicates": false,
            "gridParam": false
        },
        {
            "name": "link",
            "label": "Link Function",
            "gridParam": false,
            "description":"Relates the expected value of the response to the linear predictors in the model",
            "defaultValue": ["binomial"],
            "type": "SELECT",
             "selectChoices": [
                {
                    "value":"cdf",
                    "label":"CDF"
                },
                {
                    "value":"cloglog",
                    "label":"CLogLog"
                },
                {
                    "value":"log",
                    "label":"Log"
                },
                {
                    "value":"logit",
                    "label":"Logit"
                },
                {
                    "value":"negative_binomial",
                    "label":"Negative Binomial"
                },
                {
                    "value":"power",
                    "label":"Power"
                },
                {
                    "value":"cauchy",
                    "label":"Cauchy"
                },
                {
                    "value":"identity",
                    "label":"Identity"
                },
                {
                    "value":"inverse_power",
                    "label":"Inverse Power"
                },
                {
                    "value":"inverse_squared",
                    "label":"Inverse Squared"
                }
                
            ],
            "allowDuplicates": false,
            "gridParam": false
        },

        {
            "name": "sep1",
            "label": "HyperParams",
            "type": "SEPARATOR"
        },
        {
            "name": "alpha",
            "label": "Alpha",
            "type": "DOUBLES",
            "allowDuplicates": false,
            "visibilityCondition" : "model.family == 'negative_binomial'",
            "gridParam": false
        },
        {
            "name": "power",
            "label": "Power",
            "type": "DOUBLES",
            "allowDuplicates": false,
            "gridParam": false,
            "visibilityCondition" : "model.link == 'power'"
        }
    ]
}